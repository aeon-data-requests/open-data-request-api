{
    "openapi": "3.0.3",
    "info": {
        "title": "Open Data Rights API",
        "description": "This API describes a programattic way for applications to submit data requests (ie. GDPR Data Requests) to an organisation. It is developed as part of the Aeon project, which attempts to increase the user experience of managing personal data for EU citizens.",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "lei@codified.nl"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "0.1.0"
    },
    "externalDocs": {
        "description": "Find out more about Aeon",
        "url": "https://aeon.technology"
    },
    "components": {
        "securitySchemes": {
            "oAuth": {
                "type": "oauth2",
                "description": "This API uses OAuth 2 with the implicit grant flow",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "/oauth/authorized",
                        "tokenUrl": "/oauth/token",
                        "scopes": {}
                    }
                }
            }
        },
        "responses": {
            "unauthorized": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "enum": [
                                        "Unauthorized"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "enum": [
                                        "You are not authorized. Generate authentication tokens via OAuth to access this resource."
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "notfound": {
                "description": "Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "enum": [
                                        "Not Found"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "enum": [
                                        "Could not find a data request with this id."
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "parameters": {
            "requestId": {
                "in": "path",
                "name": "requestId",
                "schema": {
                    "type": "string"
                },
                "required": true,
                "description": "A random identifier that uniquely identifies a request. A version 4 UUID is strongly recommended. Note: the generated identifier must be random. The identifier must not include any information that can be related to the requester. Additionally, requestIds must not be incremental."
            }
        },
        "schemas": {
            "request": {
                "type": "object",
                "required": [
                    "requestId",
                    "createdAt",
                    "isCompleted",
                    "dataRequested"
                ],
                "properties": {
                    "requestId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "A random identifier that uniquely identifies a request. A version 4 UUID is strongly recommended. Note: the generated identifier must be random. The identifier must not include any information that can be related to the requester. Additionally, requestIds must not be incremental."
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "A date-time detailing when the request was made"
                    },
                    "expectedCompletion": {
                        "type": "string",
                        "format": "date-time",
                        "description": "An optional date-time detailing when the request is expected to be completed"
                    },
                    "isCompleted": {
                        "type": "boolean",
                        "description": "Whether the request has been completed already"
                    },
                    "completedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "An optional date-time detailing when the request was completed."
                    },
                    "dataRequested": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Identifier of a data type that was requested"
                        }
                    }
                }
            },
            "dataType": {
                "type": "string",
                "example": "LikeAction"
            }
        }
    },
    "tags": [
        {
            "name": "Requests",
            "description": "Endpoints for making and checking on requests"
        },
        {
            "name": "Data",
            "description": "Endpoints for checking on the data that is collected by an organisation"
        },
        {
            "name": "Settings",
            "description": "Endpoints for getting the implementation details for this organisation"
        }
    ],
    "security": [
        {
            "oAuth": []
        }
    ],
    "paths": {
        "/requests": {
            "get": {
                "summary": "List all data requests for this user",
                "description": "This will list all the active data requests for the currently authenticated user. In case any requests expire, they will no longer be present in this list.",
                "tags": [
                    "Requests"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/request"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/unauthorized"
                    }
                }
            },
            "post": {
                "summary": "Create a new data request",
                "description": "Used by the authenticated user to create a new data request from the organisation. The amount of data requests that can be simultaneously in progress is set by the organisation, and can be retrieved from the `/settings` endpoint.",
                "tags": [
                    "Requests"
                ],
                "requestBody": {
                    "description": "Describes the datatypes that the user wishes to request from the organisation. These must match the `type` parameters that are available form the `/data` eindpoint. If the request body is omitted, the data request is created for all available data types.",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/dataType"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/request"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "enum": [
                                                        "MaximumAmountOfRequestsReached"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "The maximum amount of requests has been reached."
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "enum": [
                                                        "InvalidDataTypes"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "The data types that were specified do not match the available datatypes for this organisation."
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                },
                                "examples": {
                                    "MaximumAmountOfRequestsReached": {
                                        "value": {
                                            "error": "MaximumAmountOfRequestsReached",
                                            "message": "The maximum amount of requests has been reached."
                                        }
                                    },
                                    "InvalidDataTypes": {
                                        "value": {
                                            "error": "InvalidDataTypes",
                                            "message": "The data types that were specified do not match the available datatypes for this organisation."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/unauthorized"
                    }
                }
            }
        },
        "/requests/{requestId}": {
            "get": {
                "summary": "Get the status of a previously issued data request",
                "description": "Retrieve a specific data request, which is currently in progress.",
                "tags": [
                    "Requests"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/requestId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/request"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/notfound"
                    }
                }
            },
            "delete": {
                "summary": "Cancel an outstanding request",
                "description": "The request with the supplied `requestId` is cancelled and deleted. Any information that has already been gathered from on part of the organisation must be deleted. The user must be able to submit a new data request immediately.",
                "tags": [
                    "Requests"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/requestId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "enum": [
                                        "OK"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/notfound"
                    }
                }
            }
        },
        "/requests/{requestId}/download": {
            "get": {
                "summary": "Download a previously issued data request",
                "description": "When a request is complete, an archive can be downloaded that contains all personal information of the authenticated user. This archive should be a `.ZIP` file that follows a particular structure. For more info, see the additional documentation linked below.",
                "externalDocs": {
                    "description": "Find out more about how the archive should be structured",
                    "url": "/docs/requests/archive"
                },
                "tags": [
                    "Requests"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/requestId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "Bad Request"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "The request you are trying to retrieve has not been completed yet"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/notfound"
                    }
                }
            }
        },
        "/requests/{requestId}/complete": {
            "get": {
                "summary": "Whether the specific request has been completed",
                "description": "This is a convenience endpoint to quickly check if a particular request has been completed or not. If you wish to check multiple requests at once, use the regular `/reqeusts` endpoint that will list all outstanding data requests.",
                "tags": [
                    "Requests"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/requestId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "number",
                                    "enum": [
                                        "0",
                                        "1"
                                    ],
                                    "description": "Returns 0 if the request is still pending, returns 1 if the request is complete"
                                },
                                "examples": {
                                    "RequestIncomplete": {
                                        "value": "0"
                                    },
                                    "RequestComplete": {
                                        "value": "1"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/notfound"
                    }
                }
            }
        },
        "/data": {
            "get": {
                "summary": "List the data processed by the organisation",
                "description": "In order to be able to select for which data types a request must be made, the organisation must publicise which data it processes of its users. This endpoints returns a structured, machine-readable, human-friendly list that gives a complete overview of the data processing that the legal entity creating this API is responsible for.",
                "security": [],
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "A ISO 639-1 language code identifier. Must match the `supportedLanguages` in the `/settings` endpoint. Defaults to `en`",
                        "schema": {
                            "type": "string",
                            "default": "en"
                        }
                    }
                ],
                "externalDocs": {
                    "description": "For more info on how to specify data types processed, check out the docs on data schemas",
                    "url": "docs/data-types"
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "context",
                                            "processingGround",
                                            "isErasable",
                                            "isRectifiable"
                                        ],
                                        "properties": {
                                            "type": {
                                                "$ref": "#/components/schemas/dataType"
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "A human-readable description of the type of data that is processed",
                                                "example": "The act of expressing a positive sentiment about the object. An agent likes an object (a proposition, topic or theme) with participants."
                                            },
                                            "context": {
                                                "type": "string",
                                                "format": "url",
                                                "description": "The schema.org URL for the data type. If the data does not match schema.org, organisations may create their own schemas. This property matches the `@context` property that is described by JSON-LD.",
                                                "example": "http://schema.org/LikeAction"
                                            },
                                            "processingGround": {
                                                "type": "string",
                                                "enum": [
                                                    "consent",
                                                    "performanceOfContract",
                                                    "legalObligation",
                                                    "vitalInterest",
                                                    "taskInPublicInterest",
                                                    "legitimateInterest"
                                                ],
                                                "description": "The organisation must indicate on which ground the lawfulness of their processing is based. These lawful grounds are limited by Article 6 of the General Data Protection Regulation. The values that are considered valid in this property correspond to those in subparagraph 1 of Article 6:\n* a) `consent`: the subject has given consent for the processing of this data\n* b) `performanceOfContract`: processing is necessary for performance of a legal contract\n* c) `legalObligation`: processing is necessary for compliance with a legal obligation\n* d) `vitalInterest`: processing is necessary to protect the vital interest of someone\n* e) `taskInPublicInterest`: processing is necessary to for a task carried out in the public interest\n* f) `legitimateInterest`: processing is necessary for the legitimate interest of the processor"
                                            },
                                            "isErasable": {
                                                "type": "boolean",
                                                "description": "Owners of data of this type may request the data to be deleted. The circumstances under which data must be deletable are covered by Article 17 of the General Data Proctection Regulation. In practice, consider that any data must be deletable, unless: \n* The data is covered by a legal obligation\n* The data is necessary for the performance of a task carried out in the public interest or in the exercise of official authority\n* The data is necessary for archiving purposes in the public interest, scientific research historical research or statistical purposes where erasure is likely to render impossible or seriously impair the achievement of that processing\n*  for the establishment, exercise or defence of legal claims \n\nAdditionally, specific data may be exempt from the right to erasure: \n* if the processing is necessary for public health purposes in the public interest (eg protecting against serious cross-border threats to health, or ensuring high standards of quality and safety of health care and of medicinal products or medical devices); orif the processing is necessary for the purposes of preventative or occupational medicine; for the working capacity of an employee; for medical diagnosis\n* for the provision of health or social care; or for the management of health or social care systems or services."
                                            },
                                            "isRectifiable": {
                                                "type": "boolean",
                                                "description": "Owners of data of this type may request it to be changed. The circumstances for the applicability of this right are set out in Article 16 of the General Data Protection Regulation. In general, this right applies to data that is inaccurate or incomplete. If none of these grounds apply, you may refuse honor rectification requests."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "LanguageNotSupported"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "The language you are requesting is not supported by this organisation"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/me": {
            "get": {
                "summary": "List the data that is processed by this organisation for the authenticated user",
                "tags": [
                    "Data"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/dataType"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/unauthorized"
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "summary": "Detail the properties under which this organisation operates",
                "description": "This endpoint details the prerequisites for Data Request API operation. Additionally, some of the parameters supplied in this call are designed to make it easier for citizens to understand their rights and possibilities of enforcing them. Organisations must implement all of the parameters.",
                "tags": [
                    "Settings"
                ],
                "security": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "forgotPasswordLink": {
                                            "type": "string",
                                            "format": "url",
                                            "description": "A URL that points to the human-readable privacy policy that covers the processed data",
                                            "example": "https://acme-corp.com/forgot-password"
                                        },
                                        "legalEntity": {
                                            "type": "string",
                                            "description": "The organisation that bears legal responsibility for all data processing",
                                            "example": "ACME Corp Inc."
                                        },
                                        "maxNumberOfRequests": {
                                            "type": "number",
                                            "description": "The maximum amount of requests that can be made concurrently",
                                            "example": 5
                                        },
                                        "oAuthClientId": {
                                            "type": "string",
                                            "description": "The client identifier that can be used to authenticate a user against the OAuth server. This identifier may be rotated periodically, but must be made public using this API.",
                                            "example": "6779ef20e75817b79602"
                                        },
                                        "oAuthUrl": {
                                            "type": "string",
                                            "format": "url",
                                            "description": "Either describes a RFC8414 compliant OAuth metadata endpoint (also known as OpenID Discovery), or the ",
                                            "example": "https://oauth.acmecorp.com/"
                                        },
                                        "organisationName": {
                                            "type": "string",
                                            "description": "The human-friendly name for the organisation processing the data",
                                            "example": "ACME Corp"
                                        },
                                        "privacyPolicy": {
                                            "type": "string",
                                            "format": "url",
                                            "description": "A URL that points to the human-readable privacy policy that covers the processed data",
                                            "example": "https://acme-corp.com/privacy-policy"
                                        },
                                        "privacyContactEmail": {
                                            "type": "string",
                                            "format": "email",
                                            "description": "An email address to which any issues arising with or from the retrieved data can be addressed to",
                                            "example": "privacy@acme-corp.com"
                                        },
                                        "supportedLanaguages": {
                                            "type": "array",
                                            "description": "An array of languages that are supported by this API. The language only applies to descriptions of data types that are described by the `/data` endpoint. All other returned content (such as data type identifiers) must be in English.",
                                            "items": {
                                                "type": "string",
                                                "description": "A ISO 639-1 language code identifier",
                                                "example": "en"
                                            }
                                        },
                                        "termsOfService": {
                                            "type": "string",
                                            "format": "url",
                                            "description": "A URL that points to the human-readable terms of service that covers the processed data",
                                            "example": "https://acme-corp.com/privacy-policy"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}